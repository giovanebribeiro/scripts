#!/bin/bash

FILECONF=/etc/services.conf

if [ "$(whoami)" != "root" ] ; then
	echo "This script must be executed as root."
	exit
fi

if [ ! -f $FILECONF ] ; then
echo "##" >> $FILECONF
echo "# File: /etc/services.conf" >> $FILECONF
echo "# List of services controled by script 'services' " >> $FILECONF
echo "# Must be one service per line" >> $FILECONF
echo "# All the services are controlled by 'systemd'" >> $FILECONF
echo "# Lines preceded by '#' are ignored" >> $FILECONF
echo "##" >> $FILECONF
echo "" >> $FILECONF
echo "#cronie" >> $FILECONF
echo "#transmission" >> $FILECONF

echo "File $FILECONF created. Edit this file to use this script in future."
fi

systemctl daemon-reload

start(){
while read line
do
if [ ! ${line:0:1} == '#' ] ; then
echo "Ligando o servico: $line"
systemctl start $line
fi
done < $FILECONF
}

stop(){
while read line
do
if [ ! ${line:0:1} == '#' ] ; then
echo "Desligando o servico: $line"
systemctl stop $line
fi
done < $FILECONF
}

status(){
while read line
do
if [ ! ${line:0:1} == '#' ] ; then
RESP=`systemctl status $line | grep -i -m 1 "Active"`
echo "### $line - " $RESP >> ~/temp
fi
done < $FILECONF
cat ~/temp
rm ~/temp
}

# Reinicia os servicos que falharam por algum motivo.
_watchdog(){
while read line
do
if [ ! ${line:0:1} == '#' ] ; then
RESP=`systemctl status $line | grep -i -m 1 "\(running\)"`
if [ "$RESP" == "" ] ; then
echo "Restarting service $line"
systemctl restart $line
fi
fi
done < $FILECONF
}


case $1 in
start)
	start
;;
stop)
	stop
;;
status)
	status
;;
watchdog)
	_watchdog
;;
*)
	echo "Usage: $0 [start|stop|status|watchdog]"
;;
esac 	
