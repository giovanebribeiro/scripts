#!/bin/bash

##
# File: backup
# Author: Giovane Boaviagem <giovanebribeiro@gmail.com>
# Since: 21/02/2013
#
#  This file is free software: you may copy, redistribute and/or modify it  
#  under the terms of the GNU General Public License as published by the  
#  Free Software Foundation, either version 2 of the License, or (at your  
#  option) any later version.  
#  
#  This file is distributed in the hope that it will be useful, but  
#  WITHOUT ANY WARRANTY; without even the implied warranty of  
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  
#  General Public License for more details.  
#  
#  You should have received a copy of the GNU General Public License  
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.  
##

mail_content="/tmp/backup.mail"
DATETAG=$(date +%d-%m-%Y)

log(){
	mkdir -p "/var/log/scripts"
	echo "$1"
	echo -e "[$(date '+%d/%m/%Y %H:%M:%S')] $1 " >> /var/log/scripts/backup.log
}

##
# send_mail()
# @param $1 The e-mail address to send
##
send_mail(){
	addr=$1
	if [ ! -f "/usr/bin/mailx" ] ; then
		log "You must have the heirloom-mailx package"
		return 1
	fi
	
	mailx -s "[BACKUP] $HOSTNAME -  Status Report" $1 < $mail_content

	rm $mail_content
}

##
# backup_cotoco()
##
backup_cotoco(){
	if [ ! "$(whoami)" == "root" ] ; then
		echo "This function must be executed like root"
		log "This function must be executed like root"
		exit
	fi

	BKP_FOLDER="/mnt/hd/backup/cotoco"
	BKP="$BKP_FOLDER/$DATETAG.img"

	if [ ! -d $BKP_FOLDER ]
	then
		mkdir -p $BKP_FOLDER
	fi
	
	log "*** Stopping the services..."
	# Respect the order:
	systemctl stop noip2
	systemctl stop httpd
	systemctl stop rt@giovane
	# - media server (if any)
	systemctl stop smbd nmbd 
	systemctl stop sshd
	
	log "*** Create the image"
	START=$(date +%s)
	dd if=/dev/mmcblk0 > $BKP

	cp $BKP $BKP_FOLDER/bkp_cotoco.img	

	log "*** Send the image to dropbox"
	/bin/sh `pwd`/dropbox_uploader.sh upload $BKP_FOLDER/bkp_cotoco.img /bkp_cotoco.img
	
	rm $BKP_FOLDER/bkp_cotoco.img

	FINISH=$(date +%s)
	echo -e "** Backup of cotoco in $DATETAG: $(( ($FINISH-$START) / 60  )) minutes, $((  ($FINISH-$START) % 60 )) seconds\n" >> $mail_content
	
	log "*** Reloading the services..."
	# Respect the order
	systemctl start sshd
	systemctl start smbd nmbd
	# - media server (if any)
	systemctl start rt@giovane
	systemctl start httpd
	systemctl start noip2
	
	log "*** Sending the report email..."
	echo -e "See log for details.\n" >> $mail_content
	send_mail giovanebribeiro@gmail.com
}

usage(){
	echo "syntax: $0 OPTION"
	echo "	OPTION"
	echo "		--cotoco:		Backup for cotoco"
}

case "$1" in
	--cotoco) backup_cotoco;;
	*) usage;;
esac



#
# backup_time_machine()
# @param $1: Parent folder for backup
#
#backup_time_machine(){
#	echo "*** Starting backup using rsync..."
#	DATETAG=$(date +%d-%m-%Y)		
#	
#	BACKUP_PARENT_FOLDER="$1"
#	SRC="/*"
#	SNAP="$BACKUP_PARENT_FOLDER/latest"	
#	BKP_FOLDER="$BACKUP_PARENT_FOLDER/$DATETAG"
#	OPTS="-aAXv --link-dest=$SNAP --exclude=/dev --exclude=/proc --exclude=/sys --exclude=/tmp --exclude=/run --exclude=/mnt --exclude=/media --exclude=/lost+found --exclude=/home/*/.gvfs"
#	
#	
#	
#	# if the rsync is not installed, exit
#	if [ ! -f /usr/bin/rsync ] ; then
#		log "rsync must be installed on the system\n"
#		return 1
#	fi
#	
#	
#	# run this process with low priority
#	ionice -c 3 -p $$
#	renice +12 -p $$
#	# create the folder if don't exist:
#	if [ ! -d "$BACKUP_PARENT_FOLDER" ] ; then
#		mkdir -p $BACKUP_PARENT_FOLDER
#	fi
#
#	#sync
#	log "**** Backup:"
#	START=$(date +%s)
#	rsync $OPTS $SRC $BKP_FOLDER
#	rm -f $SNAP
#	ln -s $BKP_FOLDER $SNAP	
#	FINISH=$(date +%s)
#	
#	log "** Backup of $DATETAG: $(( ($FINISH-$START) / 60  )) minutes, $((  ($FINISH-$START) % 60 )) seconds\n"
#}

##
# restore()
# @param $1 Folder for restore
##
#restore_time_machine(){		
#	# if the rsync is not installed, exit
#	if [ ! -f /usr/bin/rsync ] ; then
#		log "restore_time_machine" "rsync must be installed on the system"
#		exit 1
#	fi
#	
#	log "restore" "Not implemented yet."
#}
