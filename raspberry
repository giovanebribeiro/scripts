#!/bin/bash

##
# File: backup_raspberry
# Description: Utils for Raspberry Pi.
# Date: 16/01/2014
##

##
# Configs
##
# Backup's image directory
EXT_HD_LOCATION=/mnt
PUSHOVER_DIR=/home/giovane/scripts
#
#
#
##
# Not change behind this point...
##
TAG="RASPBERRY_UTILS"
HOSTNAME=`hostname`
#
# -r = recursive into directories
# -l = copy symlinks as symlinks
# -t = preserve modification times
# -W = copy files whole (w/o delta-xfer algorithm)
# -D = preserve device files
# -E = preserve executability
# -g = preserve group
# -o = preserve owner
# -p = preserve permissions
#
RSYNC_OPTIONS="--force -rltWDEgop"
DST_ROOT=$EXT_HD_LOCATION/backup/$HOSTNAME
VERSION="01.00"
#
#
#
if [ `id -u` != 0 ]
then
        logger -t "$TAG" -s "This script must be run as root."
        exit 1
fi
#
#
#
if ! rsync --version > /dev/null
then
        logger -t $TAG -s "This script needs rsync to run properly."
        exit 0
fi
#
#
#
version(){
echo "Raspberry Utils"
echo "Author: Giovane Boaviagem Ribeiro (giovanebribeiro@gmail.com)"
echo "Version: $VERSION"
}
#
#
#
_help(){
echo "Raspberry Utils"
echo ""
echo "Usage: $0 [options]"
echo ""
echo "-h = Print this help"
echo "-v = Print the version"
echo "-b = Backup the raspberry (Using rsync)"
echo "-r = Restore the raspberry (Using rsync)"
}
#
# Backup function.
# Creates a backup in snapshot-tree.
# If the file changes 20 times, create a hardlink.
#
backup(){
        DST="$DST_ROOT/latest"
        MINCHANGES=20

        bTAG="$TAG:BACKUP"
        MSG1="Backup iniciado com sucesso."
        MSG2="Backup finalizado com sucesso"

        logger -t $bTAG -s $MSG1
        /bin/bash $PUSHOVER_DIR/pushover sd cotoco "Cotoco" "$MSG1"
        INIT=$(date +"%s")

        if [ ! -d $DST ]
        then
                mkdir -p $DST
        fi

        # Run this process with low priority.
        ionice -c 3 -p $$
        renice +12 -p $$

        # sync
        rsync $RSYNC_OPTIONS \
                --delete \
                --exclude '/dev' \
                --exclude '/media' \
                --exclude '/mnt' \
                --exclude '/proc' \
                --exclude '/run' \
                --exclude '/sys' \
                --exclude '/tmp' \
                --exclude '/lost\+found' \
                / $DST >> $DST_ROOT/rsync.log

        if [ -e $DST_ROOT/rsync.log ]
        then
                logger -t $TAG -s "Checking if enough has changed to create a hardlink."
                COUNT=$( wc -l $DST_ROOT/rsync.log | cut -d" " -f1 )
                if [ $COUNT -gt $MINCHANGES ]
               then
                        NOW=$(date +%d-%m-%Y)
                        if [ ! -e $DST_ROOT/$NOW ]
                        then
                                cp -al $DST $DST_ROOT/$NOW
                                chmod u+w $DST_ROOT/$NOW
                                mv $DST_ROOT/rsync.log $DST_ROOT/$NOW/rsync.log
                                chmod u-w $DST_ROOT/$NOW
                        fi
                fi
        fi

        FINISH=$(date +"%s")
        DIFF=$(($FINISH-$INIT))
        logger -t $bTAG -s $MSG2
        /bin/bash $PUSHOVER_DIR/pushover sd cotoco "Cotoco" "$MSG2 (Execution time: $(($DIFF / 60)) minutes and $(($DIFF % 60)) seconds)."

}

restore(){
        rTAG="$TAG:RESTORE"
        echo -n "Set the data for backup (dd-MM-yyyy) [leave empty for latest backup]"
        read DATE

        TAG="$DATE"
        if [ -z $DATE ]
        then
                TAG="latest"
        else
                check=$(echo $TAG | sed -e '/[0-9]{2}-[0-9]{2}-[0-9]{4}')
                if [[ -z $check ]]
                then
                        logger -t $rTAG -s "$$DATE is the right format"
                else
                        logger -t $rTAG -s "The date isn't in the right format. Please use dd-MM-yyyy"
                        exit 1
                fi
        fi
        SRC=$DST_ROOT/$TAG
        logger -t $rTAG -s "SRC Directory: $SRC"
        if [ -d $SRC ]
        then
                rsync $RSYNC_OPTIONS $SRC /
        else
                logger -t $rTAG -s "$SRC doesn't exist."
                exit 1
        fi
}

case $1 in
        -h) _help ;;
        -v) version ;;
        -b) backup ;;
        -r) restore ;;
        *)
                logger -t $TAG -s "Incorrect option."
                help
                ;;
esac

